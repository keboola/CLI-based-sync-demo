name: Manual KBC Pull (L0, L1)
on:
  workflow_dispatch:
    inputs:
      dest_env:
        description: 'Destination Environment (OPT)'
        default: 'main'
        type: choice
        options:
          - 'main'
          - 'dev'
          - ''
permissions:
  contents: write
jobs:

  # VAULT validation
  vault_validation_get_structures:
    if: github.event.inputs.dest_env != ''
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - environment: ${{github.ref_name == 'dev' && 'dev' || github.ref_name == 'main' && 'prod' }}
            origin: "source"
          - environment: ${{ github.event.inputs.dest_env }}
            origin: "destination"
    environment: ${{ matrix.environment }}
    steps:
      - uses: actions/checkout@v4

      # Generated steps 
      - name: Pull vault L0
        uses: ./.github/actions/kbc_vault_validation/get_vault_keys
        with:
          destFile: "${{ matrix.origin }}/${{ matrix.environment }}/L0.json"
          kbcSapiHost: ${{ vars.KBC_SAPI_HOST }}
          kbcSapiToken: ${{ secrets.KBC_SAPI_TOKEN_L0 }}
          kbcBranchId: ${{ vars.KBC_BRANCH_ID_L0 }}
      
      - name: Pull vault L1
        uses: ./.github/actions/kbc_vault_validation/get_vault_keys
        with:
          destFile: "${{ matrix.origin }}/${{ matrix.environment }}/L1.json"
          kbcSapiHost: ${{ vars.KBC_SAPI_HOST }}
          kbcSapiToken: ${{ secrets.KBC_SAPI_TOKEN_L1 }}
          kbcBranchId: ${{ vars.KBC_BRANCH_ID_L1 }}
      # End generated steps

  vault_validation_comparison:
    runs-on: ubuntu-latest
    needs: vault_validation_get_structures
    steps:
      - uses: actions/checkout@v4
      - name: Compare vault structure
        uses: ./.github/actions/kbc_vault_validation

  # STORAGE validation
  storage_validation_get_structures:
    if: github.event.inputs.dest_env != ''
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - environment: ${{github.ref_name == 'dev' && 'dev' || github.ref_name == 'main' && 'prod' }}
            origin: "source"
          - environment: ${{ github.event.inputs.dest_env }}
            origin: "destination"
    environment: ${{ matrix.environment }}
    steps:
      - uses: actions/checkout@v4

      # Generated steps 
      - name: Pull storage L0
        uses: ./.github/actions/kbc_storage_validation/get_storage_structure
        with:
          destFile: "${{ matrix.origin }}/${{ matrix.environment }}/L0.json"
          kbcSapiHost: ${{ vars.KBC_SAPI_HOST }}
          kbcSapiToken: ${{ secrets.KBC_SAPI_TOKEN_L0 }}
          kbcProjectId: ${{ vars.KBC_PROJECT_ID_L0 }}
      
      - name: Pull storage L1
        uses: ./.github/actions/kbc_storage_validation/get_storage_structure
        with:
          destFile: "${{ matrix.origin }}/${{ matrix.environment }}/L1.json"
          kbcSapiHost: ${{ vars.KBC_SAPI_HOST }}
          kbcSapiToken: ${{ secrets.KBC_SAPI_TOKEN_L1 }}
          kbcProjectId: ${{ vars.KBC_PROJECT_ID_L1 }}
      # End generated steps

  storage_validation_comparison:
    runs-on: ubuntu-latest
    needs: storage_validation_get_structures
    steps:
      - uses: actions/checkout@v4
      - name: Compare storage structure
        uses: ./.github/actions/kbc_storage_validation

  # CLI push dry-run
  CLI_push_dry_run:
    if: github.event.inputs.dest_env != ''
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.dest_env }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Generated steps 
      - name: Get CLI diff L0
        uses: ./.github/actions/kbc_push_dry
        with:
          workdir: L0
          kbcSapiHost: ${{ vars.KBC_SAPI_HOST }}
          kbcSapiToken: ${{ secrets.KBC_SAPI_TOKEN_L0 }}
          kbcProjectId: ${{ vars.KBC_PROJECT_ID_L0 }}
          kbcBranchId: ${{ vars.KBC_BRANCH_ID_L0 }}
      
      - name: Get CLI diff L1
        uses: ./.github/actions/kbc_push_dry
        with:
          workdir: L1
          kbcSapiHost: ${{ vars.KBC_SAPI_HOST }}
          kbcSapiToken: ${{ secrets.KBC_SAPI_TOKEN_L1 }}
          kbcProjectId: ${{ vars.KBC_PROJECT_ID_L1 }}
          kbcBranchId: ${{ vars.KBC_BRANCH_ID_L1 }}
      # End generated steps

      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: cli_diffs
          pattern: cli_diff_*

  # Pull all configurations from projects, collection of validation results and push with commit
  Pull_All:
    if: always()
    needs: [ storage_validation_comparison,vault_validation_comparison,CLI_push_dry_run ]
    # Dynamic generated value
    environment: ${{github.ref_name == 'dev' && 'dev' || github.ref_name == 'main' && 'prod' }}
    runs-on: ubuntu-latest
    steps:
      - name: Log
        run: |
          currentDate=$(date +%Y-%m-%d:%T%Z)

          echo "Manual KBC pull $currentDate" > "$RUNNER_TEMP/log.txt"
          echo -e "Validation time: $currentDate\n" >> "$RUNNER_TEMP/log.txt"

      - uses: actions/checkout@v4

      # Read Vault artifacts to log
      - name: Read vault_structures_result
        uses: ./.github/actions/read_artifact
        with:
          artifactName: vault_structures_result

      # Read Storage artifacts to log
      - name: Read storage_structures_result
        uses: ./.github/actions/read_artifact
        with:
          artifactName: storage_structures_result

      # Read CLI diff artifacts to log
      - name: Read storage_structures_result
        uses: ./.github/actions/read_artifact
        with:
          artifactName: cli_diffs
          logHeader: "CLI Push dry-runs\n=================\n"

      - uses: ./.github/actions/install
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Log_pull_header
        run: |
          echo -e "Pull configurations from projects" >> "$RUNNER_TEMP/log.txt"
          echo -e "=================================\n" >> "$RUNNER_TEMP/log.txt"

     # Generated steps 
      - name: Pull configurations from L0
        uses: ./.github/actions/kbc_pull
        with:
          workdir: "L0"
          kbcSapiHost: ${{ vars.KBC_SAPI_HOST }}
          kbcSapiToken: ${{ secrets.KBC_SAPI_TOKEN_L0 }}
          kbcProjectId: ${{ vars.KBC_PROJECT_ID_L0 }}
          kbcBranchId: ${{ vars.KBC_BRANCH_ID_L0 }}
      
      - name: Pull configurations from L1
        uses: ./.github/actions/kbc_pull
        with:
          workdir: "L1"
          kbcSapiHost: ${{ vars.KBC_SAPI_HOST }}
          kbcSapiToken: ${{ secrets.KBC_SAPI_TOKEN_L1 }}
          kbcProjectId: ${{ vars.KBC_PROJECT_ID_L1 }}
          kbcBranchId: ${{ vars.KBC_BRANCH_ID_L1 }}
      # End generated steps

      # Final commit and GIT push
      - name: Commit and push
        run: |
          # Commit and push
          git config --global user.name 'Keboola CLI'
          git config --global user.email 'keboola-cli@users.noreply.github.com'

          git add -A
          git commit --allow-empty -a -F "$RUNNER_TEMP/log.txt" || true
          git push --force